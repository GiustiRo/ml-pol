/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

// /* Core CSS required for Ionic components to work properly */
// @import "@ionic/angular/css/core.css";

// /* Basic CSS for apps built with Ionic */
// @import "@ionic/angular/css/normalize.css";
// @import "@ionic/angular/css/structure.css";
// @import "@ionic/angular/css/typography.css";
// @import '@ionic/angular/css/display.css';

// /* Optional CSS utils that can be commented out */
// @import "@ionic/angular/css/padding.css";
// @import "@ionic/angular/css/float-elements.css";
// @import "@ionic/angular/css/text-alignment.css";
// @import "@ionic/angular/css/text-transformation.css";
// @import "@ionic/angular/css/flex-utils.css";

@import url('animations.scss');

@font-face {
    font-display: swap;
    font-family: 'Work Sans';
    font-style: normal;
    font-weight: 400;
    src: url('./fonts/work-sans-v18-latin-regular.woff2') format('woff2'),
        // url('work-sans-v18-latin-regular.woff') format('woff');
        /* Chrome 5+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}

html,
body {
    margin: 0;
    font-family: 'Work Sans', Arial, Helvetica, sans-serif;
}

:root {
    // Customizable styles
    --base-color: #f2f2f2;
    --primary-color: #A16AE8;
    --primary-color-alt: #ffffff;
    --size-1: 1rem;
    --size-2: calc(var(--size-1) * 2);
    --size-3: calc(var(--size-1) * 3);
    --size-4: calc(var(--size-1) * 4);

    --max-width: 25rem;

    // 3 themes supported.
    --rounded: 0;
    --shadows: none;
    // --alt-style: brightness(0.3) contrast(1.8);
}


// Specific user video & canvas rules.
.user-media {
    position: fixed;
    top: 0;
    object-fit: cover;
    height: 100vh;
    width: 100vw;
    margin-inline: auto;
    z-index: 99999;
    display: none;
    max-width: var(--max-width);
}

.tracking {
    transition: .3s;
    translate: 100vw 0;
    display: initial;
    animation: page-enter ease-in-out forwards;
    animation-delay: 0s;
    animation-duration: .5s;

}

#user-video,
#user-canvas {
    transform: scaleX(-1);
}

#user-message {
    color: #f5f5f5;
    font-size: calc(var(--size-1)*1.2);
    pointer-events: none;
    z-index: 9999999999;
    display: flex;
    flex-direction: column;
    justify-content: end;
    text-align: center;
    translate: 0 -5vh !important;
    align-items: center;

    #message {
        transition: .3s;
        transition-delay: 0s;
        color: transparent;
        background-clip: text;
        -webkit-background-clip: text;
        background-image: linear-gradient(90deg, #7aaf2a 0%, #7aaf2a 50%, white 50%, white 100%);
        background-position-x: -100vw;
        background-size: 200vw;
        background-repeat: no-repeat;
        font-weight: bold;

        width: auto;
        position: relative;
        &::before {
            content: " ";
            transition: .3s;
            transition-delay: .3s;
            background-image: linear-gradient(90deg, #7aaf2a 0%, #7aaf2a 50%, transparent 50%, transparent 100%);
            background-position-x: -100vw;
            background-size: 200vw;
            background-repeat: no-repeat;
            position: absolute;
            height: 10px;
            translate: 0 4vh;
            width: 100%;
            // border: 1px solid gray; // toggle to make it visible
        }
    }

    &.user-ok {
        #message {
            transition-delay: 0s;
            transition: 1.5s ease-in-out;
            background-position-x: 0vw;

            &::before {
                transition-delay: .3s !important;
                transition: 1.5s ease-in-out;
                background-position-x: 0vw;

            }
        }
    }
}


.unflip {
    transform: scaleX(1) !important;
}


#user-overlay {
    transition: .3s;
    border: 10px solid #ffffff90;
    // background-image: linear-gradient(00deg, white 00%, transparent 50%);
    scale: 0.7;
    box-shadow: 0 0 50px 800px #181818;
    z-index: 999999999;
    border-radius: 45%;
    max-height: 90vh;
    transform: translateY(5vh);

    &.user-ok {
        transition: border 1.5s ease !important;
        // background-image: linear-gradient(180deg, green 50%, transparent 50%);;
        border-color: #7aaf2a;

    }
}


// Document Identification related
.user-document {
    // display: none;
    visibility: hidden;
    z-index: -10;
    // rotate: -90deg;
}

.document-overlay-frame {
    scale: 0.9 !important;
    margin-left: -5px;
}

.document-layout {
    object-fit: contain;
}

.document-layout-picture {
    rotate: 90deg;
    display: block;
    object-fit: contain;
    scale: 1.6;
    opacity: 0.5;
}

.front-document {}

// Generic and reusable rules.
.page-wrap {
    --main-padding: 1rem;
    overflow-y: auto;
    background-color: var(--base-color);

    padding-left: var(--main-padding);
    padding-right: var(--main-padding);
    padding-bottom: calc(var(--main-padding)*2);
    padding-top: calc(var(--main-padding)*2);
    height: calc(100vh - calc(var(--main-padding) * 4));
    width: calc(100vw - calc(var(--main-padding) * 2));
    overflow-x: hidden;
    max-width: calc(var(--max-width) - calc(var(--main-padding)*2)) !important;
}

.challenge-page {
    transition: .3s;
    width: var(--max-width);
    margin-left: auto;
    margin-right: auto;

    // translate: 100vw -100vh;
    // animation: page-enter .5s ease-in-out 1s forwards;
}

.challenges {
    gap: var(--size-1);
}

.challenge {
    * {
        transition: .3s;
    }

    padding-left: var(--size-1);
    padding-right: var(--size-1);
    padding-bottom: calc(var(--size-1)*1.5);
    padding-top: calc(var(--size-1)*1.5);
    transition: .3s;
    border-radius: var(--rounded);
    border: 4px solid var(--primary-color-alt);

    background-color: var(--primary-color-alt);
    color: var(--primary-color);

    svg {
        path {
            fill: var(--primary-color);
        }
    }

    .asset-wrap {
        opacity: .5;
    }

    &:hover {
        translate: 5px 0;
        border-left-color: var(--primary-color);
        box-shadow: var(--shadows);

        .asset-wrap {
            opacity: 1;
        }
    }
}

.challenge-done {
    filter: brightness(0.9);
    opacity: .5 !important;
    pointer-events: none !important;
    border-left-color: var(--primary-color) !important;

    &::after {
        filter: drop-shadow(0px 0px 10px #00000090);
        content: "✅";
        margin-left: calc(var(--size-1) * 0.4);
        position: absolute;
        translate: 19rem 20px;
        opacity: 1;
    }

    .asset-wrap {
        opacity: 1;
    }

    svg path {
        fill: var(--primary-color) !important;
    }
}

.challenge-failed {
    border-left-color: red !important;
    color: red !important;

    &::after {
        filter: drop-shadow(0px 0px 10px #00000090);
        content: "❌";
        margin-left: calc(var(--size-1) * 0.4);
        position: absolute;
        translate: 19rem 20px;
        opacity: 1;
    }

    .asset-wrap {
        opacity: 1;
    }

    svg path {
        fill: red !important;
    }
}

.brand-logo {
    object-fit: scale-down;
    max-height: 50px;
    opacity: 1;
    width: 100%;
    min-height: 50px;
}

.brand-name {
    width: 100%;
    text-align: center;
    padding: 0;
    margin: 0;
    color: var(--primary-color-alt);
    filter: brightness(0.8);
}

button {
    border: none;
    background-color: var(--primary-color);
    padding: var(--size-1);
    border-radius: var(--rounded);

    box-shadow: var(--shadows);
    width: 100%;
}

// Custom utils to reuse.

.w-100 {
    width: 100%;
}

.df {
    display: flex;
}

.fdr {
    flex-direction: row;
}

.fdc {
    flex-direction: column;
}

.jc-center {
    justify-content: center;
}

.jc-sb {
    justify-content: space-between;
}

.ai-center {
    align-items: center;
}

.ai-stretch {
    align-self: stretch;
}

.m-0 {
    margin: 0;
}

.mx-auto {
    margin-left: auto;
    margin-right: auto;
}

.spinner {
    background-color: #00000090;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    backdrop-filter: blur(2px);

    img {
        margin: auto;
        width: 50px;
        translate: calc(50vw - 25px) 45vh;
    }
}

@keyframes page-enter {
    to {
        translate: 0vw 0vh;
    }
}

@keyframes page-leave {
    to {
        translate: -100vw 0;
    }
}

@keyframes shadow-delay {
    to {
        box-shadow: 0 0 50px 200px #00000090;
    }
}

// Below DEV utilites related styles.

#dev-data {
    position: fixed;
    bottom: 0;
    display: flex;
    width: 100vw;
    justify-content: center;
    font-size: 1rem;
    color: white;
    z-index: 99999;
    background-color: rgb(58, 58, 58);
}

#composite-canvas,
#composite-picture {
    --canvas-size: 1600px;
    position: fixed;
    top: calc(var(--canvas-size)*-1);
    left: calc(var(--canvas-size)*-1);
    z-index: -9999999999999999999999;
    width: var(--canvas-size);
    height: var(--canvas-size);
    background-color: transparent;
    transform: scaleX(-1);
    visibility: hidden;

    object-fit: contain;

    &.dev {
        position: relative !important;
        top: 0vh !important;
        z-index: 9999999999999999999999 !important;
        visibility: visible !important;
    }

    &.is-mobile {
        // object-fit: inherit !important;

    }
}

#composite-canvas {
    left: calc(var(--canvas-size)*-1);

    &.dev {
        left: 0vh !important
    }
}

#composite-picture {
    left: calc(var(--canvas-size)*-1);

    &.dev {
        left: 0vh !important
    }

}